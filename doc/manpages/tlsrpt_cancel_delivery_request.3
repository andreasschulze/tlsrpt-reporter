'\" t
.\"     Title: tlsrpt_cancel_delivery_request
.\"    Author: Boris Lohner
.\" Generator: Asciidoctor 1.5.6.1
.\"      Date: 2024-11-06
.\"    Manual: tlsrpt_cancel_delivery_request
.\"    Source: tlsrpt_cancel_delivery_request
.\"  Language: English
.\"
.TH "TLSRPT_CANCEL_DELIVERY_REQUEST" "3" "2024-11-06" "tlsrpt_cancel_delivery_request" "tlsrpt_cancel_delivery_request"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\\$2 \(laURL: \\$1 \(ra\\$3
..
.if \n[.g] .mso www.tmac
.LINKSTYLE blue R < >
.SH "NAME"
tlsrpt_cancel_delivery_request \- marks the delivery request as cancelled
.SH "SYNOPSIS"
.sp
#include <tlsrpt.h>
.sp
int tlsrpt_cancel_delivery_request(struct tlsrpt_dr_t** pdr)
.SH "DESCRIPTION"
.sp
The \f[CR]tlsrpt_cancel_delivery_request\fP function marks the delivery request as cancelled.
This is done by an internal library "dummy error" \f[CR]TLSRPT_ERR_TLSRPT_CANCELLED\fP which, like all errors, will prevent the delivery request from being sent out.
The function then calls \f[CR]tlsrpt_finish_delivery_request\fP, which will do all the clean\-up of used ressources.
.SH "RETURN VALUE"
.sp
The tlsrpt_cancel_delivery_request function returns 0 on success and a combined error code on failure.
The combined error code can be analyzed with the \fItlsrpt_strerror\fP function.
.SH "SEE ALSO"
.sp
\fBtlsrpt_init_delivery_request\fP(3), \fBtlsrpt_finish_delivery_request\fP(3), \fBtlsrpt_strerror\fP(3), \fBtlsrpt_error_code_is_internal\fP(3)
.SH "AUTHOR(S)"
.sp
\fBBoris Lohner\fP
.RS 4
Author(s).
.RE