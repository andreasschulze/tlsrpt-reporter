'\" t
.\"     Title: tlsrpt-receiver
.\"    Author: Boris Lohner
.\" Generator: Asciidoctor 1.5.6.1
.\"      Date: 2024-10-31
.\"    Manual: tlsrpt-receiver
.\"    Source: tlsrpt-receiver
.\"  Language: English
.\"
.TH "TLSRPT\-RECEIVER" "1" "2024-10-31" "tlsrpt\-receiver" "tlsrpt\-receiver"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\\$2 \(laURL: \\$1 \(ra\\$3
..
.if \n[.g] .mso www.tmac
.LINKSTYLE blue R < >
.SH "NAME"
tlsrpt\-receiver \- A daemon collecting TLSRPT report data from MTA instances via a unix domain socket.
.SH "SYNOPSIS"
.sp
\fBtlsrpt\-receiver\fP [\fIOPTION\fP]
.SH "DESCRIPTION"
.sp
The tlsrpt\-receiver collects data from MTAs about successful encrypted delivery of emails or about failures that occured during delivery attempts.
The data is pre\-aggregated and will be retrieved by matching tlsrpt\-fetchers.
.sp
Tlsrpt\-receivers can use different storage back\-ends and for each such implementation a matching fetcher implementation must be provided if the data is to be used by a tlsrpt\-reporter.
.sp
It is also possible to implement storage backends that are not queried by a tlsrpt\-reporter.
Such "storage" back\-ends would just collect the data for analyzing purposes, but would not provide measn to retrieve the data again.
.SH "OPTIONS"
.sp
\fB\-\-storage\fP=\fIURL\fP
.RS 4
Use data storage described by \fIURL\fP.
This can be a comma\-separated list of multiple storage backends.
The URL schema identifies the storage backend.
.RE
.sp
\fB\-\-socketname\fP=\fIpath\fP
.RS 4
Listen on unix domain socket \fIpath\fP for report data.
.RE
.sp
\fB\-\-sockettimeout\fP=\fIn\fP
.RS 4
Commit accumulated data to the data storage if \fIn\fP seconds have passed since the last commit.
.RE
.sp
\fB\-\-max_uncommited_datagrams\fP=\fIn\fP
.RS 4
Commit accumulated data to the data storage after \fIn\fP datagrams have been received.
.RE
.sp
\fB\-\-retry_commit_datagram_count\fP=\fIn\fP
.RS 4
After a commit of the accumulated data has failed, retry after \fIn\fP more datagrams have been received instead of directly after the next datagram.
If a commit fails due to a timeout, retrying after every datagram might risk running into the same timeout again and again.
Retrying only every \fIn\fP datagrams reduces the time waiting for such timeouts.
.RE
.sp
\fB\-\-dump_path_for_invalid_datagram\fP=\fIpath\fP
.RS 4
If an invalid datagram is received and this options is set, the invalid datagram will be saved in the file named \fIpath\fP.
.RE
.SS "General options"
.sp
\fB\-\-config_file\fP=\fIfilename\fP
.RS 4
Read options from the section tlsrpt_receiver of the INI\-style configuration file \fIfilename\fP.
Environment variables override setings from the configurstion file and command line options override both.
.RE
.sp
\fB\-\-help\fP
.RS 4
Print a help message describing all options.
.RE
.SS "Logging options"
.sp
\fB\-\-logfilename\fP=\fIfilename\fP
.RS 4
Use \fIfilename\fP as log file.
.RE
.sp
\fB\-\-log_level\fP=\fIlevel\fP
.RS 4
Set log level to \fIlevel\fP, allowed values: debug, info, warn, error.
.RE
.SH "ENVIRONMENT"
.sp
All config options except \-\-help and \-\-config_file can also be set via environment variables.
The environment variable for a configuration option is the prefix TLSRPT_RECEIVER_ followed by the configuration setting name in all caps.
For example the \-\-log_level option can instead by configured using the TLSRPT_RECEIVER_LOG_LEVEL environment variable.
.SH "EXIT STATUS"
.sp
\fB0\fP
.RS 4
Success.
.RE
.sp
\fB1\fP
.RS 4
Failure.
Data could not be delivered.
.RE
.sp
\fB2\fP
.RS 4
Failure.
Data could not be delivered.
.RE
.sp
\fB3\fP
.RS 4
Usage error.
.RE
.SH "EXAMPLES"
.sp
Run tlsrpt\-receiver with a special config file and ovverride the setting of log\-level:
.sp
\fBtlsrpt\-receiver \-\-config\-file /path/to/config.cfg \-\-log_level info\fP
.SH "SEE ALSO"
.sp
\fBtlsrpt\-fetcher\fP(1), \fBtlsrpt\-reporter\fP(1)
.SH "AUTHOR(S)"
.sp
\fBBoris Lohner\fP
.RS 4
Author(s).
.RE